package gobinsec

import "testing"

func TestVersionMatchEnd(t *testing.T) {
	// same date : excluding should not match and including should match
	versionDependency := NewVersion("v0.0.0-20191109021931-daa7c04131f5")
	versionVulnerability := NewVersion("2019-11-09")
	versionMatch := VulnerabilityMatch{VersionEndExcluding: versionVulnerability}
	if versionMatch.Match(versionDependency) {
		t.Fatalf("vulnerability should not match dependency version")
	}
	versionMatch = VulnerabilityMatch{VersionEndIncluding: versionVulnerability}
	if !versionMatch.Match(versionDependency) {
		t.Fatalf("vulnerability should match dependency version")
	}
	// vulnerability before : excluding and including should not match
	versionVulnerability = NewVersion("2019-11-08")
	versionMatch = VulnerabilityMatch{VersionEndExcluding: versionVulnerability}
	if versionMatch.Match(versionDependency) {
		t.Fatalf("vulnerability should not match dependency version")
	}
	versionMatch = VulnerabilityMatch{VersionEndIncluding: versionVulnerability}
	if versionMatch.Match(versionDependency) {
		t.Fatalf("vulnerability should not match dependency version")
	}
	// vulnerability after : excluding and including should match
	versionVulnerability = NewVersion("2019-11-10")
	versionMatch = VulnerabilityMatch{VersionEndExcluding: versionVulnerability}
	if !versionMatch.Match(versionDependency) {
		t.Fatalf("vulnerability should not match dependency version")
	}
	versionMatch = VulnerabilityMatch{VersionEndIncluding: versionVulnerability}
	if !versionMatch.Match(versionDependency) {
		t.Fatalf("vulnerability should not match dependency version")
	}
}
